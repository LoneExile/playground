version: '3'
services:
  # Generate fake traces...
  # k6-tracing:
  #   image: ghcr.io/grafana/xk6-client-tracing:v0.0.2
  #   environment:
  #     - ENDPOINT=otel-collector:4317
  #   restart: always
  #   depends_on:
  #     - otel-collector

  # And put them in an OTEL collector pipeline...
  otel-collector:
    # image: otel/opentelemetry-collector:0.61.0
    image: otel/opentelemetry-collector:latest
    command: ['--config=/etc/otel-collector.yaml']
    volumes:
      - ./config/otel-collector.yaml:/etc/otel-collector.yaml

  # To eventually offload to Tempo...
  tempo:
    image: grafana/tempo:latest
    command: ['-config.file=/etc/tempo.yaml']
    volumes:
      - ./config/tempo-config.yaml:/etc/tempo.yaml
      - ./config/tempo-data:/tmp/tempo
    ports:
      - '14268' # jaeger ingest
      - '3200' # tempo
      # - '4317' # otlp grpc
      - '4317:4317' # otlp grpc
      - '4318' # otlp http
      - '9411' # zipkin

  prometheus:
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./config/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - '9090:9090'

  grafana:
    image: grafana/grafana:9.4.3
    volumes:
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - '3000:3000'

  hotchoc:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: hotchoc
    environment:
      - OTEL_TRACES_EXPORTER=otlp
      - OTEL_METRICS_EXPORTER=otlp
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_RESOURCE_ATTRIBUTES=service.name=HotChoc
    ports:
      - '5000:5000'
    restart: always
    depends_on:
      - otel-collector
